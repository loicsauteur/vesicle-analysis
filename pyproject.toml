# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://peps.python.org/pep-0621/
[project]
name = "vesicle-analysis"
version = "0.1.0"
description = "A custom package for vesicle analysis."
readme = "README.md"
requires-python = ">=3.9,<3.11"
license = { text = "BSD-3-Clause" }
authors = [{ name = "LoÃ¯c Sauteur", email = "loic.sauteur@unibas.ch" }]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed",
]
# add your package dependencies here
dependencies = [
    "aicsimageio==4.14.0",
    "nd2==0.10.1",
    "napari[all]==0.4.19.post1",
    "pandas==2.2.2",
    "scikit-image==0.22.0",
    "notebook==7.2.2",
    "jupyterlab==4.2.1",
    "numpy==1.26.4",
]

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
# "extras" (e.g. for `pip install .[test]`)
[project.optional-dependencies]
# add dependencies used for testing here
test = ["pytest", "pytest-cov"]
# add anything else you like to have in your dev environment here
dev = [
    "ipython",
    "mypy",
    "pdbpp",  # https://github.com/pdbpp/pdbpp
    "pre-commit",
    "rich",  # https://github.com/Textualize/rich
    "ruff",
    "prompt-toolkit==3.0.36"
]

[project.urls]
homepage = "https://github.com/loicsauteur/vesicle-analysis"
repository = "https://github.com/loicsauteur/vesicle-analysis"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# same as console_scripts entry point
# [project.scripts]
# vesicle-analysis-cli = "vesicle_analysis:main_cli"

# [project.entry-points."some.group"]
# tomatoes = "vesicle_analysis:main_tomatoes"

# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src"]

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
]
ignore = [
    "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false  # default is false

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

# # module specific overrides
# [[tool.mypy.overrides]]
# module = ["numpy.*",]
# ignore_errors = true

# https://docs.pytest.org/
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]

[tool.coverage.run]
source = ["vesicle_analysis"]

# https://github.com/mgedmin/check-manifest#configuration
# add files that you want check-manifest to explicitly ignore here
# (files that are in the repo but shouldn't go in the package)
[tool.check-manifest]
ignore = [
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
]
